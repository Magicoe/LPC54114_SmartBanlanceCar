<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\Objects_m4f\qei_dualcore_m4f.out]</title></head>
<body><HR>
<H1>Static Call Graph for image .\Objects_m4f\qei_dualcore_m4f.out</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5060528: Last Updated: Tue Mar 27 15:05:39 2018
<BR><P>
<H3>Maximum Stack Usage =        432 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
main &rArr; BOARD_InitDebugConsole &rArr; DbgConsole_Init &rArr; USART_Init &rArr; USART_SetBaudRate &rArr; __aeabi_assert &rArr; DbgConsole_Printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintInt &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[2]">NMI_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[2]">NMI_Handler</a><BR>
 <LI><a href="#[3]">HardFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[3]">HardFault_Handler</a><BR>
 <LI><a href="#[4]">MemManage_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[4]">MemManage_Handler</a><BR>
 <LI><a href="#[5]">BusFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[5]">BusFault_Handler</a><BR>
 <LI><a href="#[6]">UsageFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[6]">UsageFault_Handler</a><BR>
 <LI><a href="#[7]">SVC_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[7]">SVC_Handler</a><BR>
 <LI><a href="#[8]">DebugMon_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[8]">DebugMon_Handler</a><BR>
 <LI><a href="#[9]">PendSV_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[9]">PendSV_Handler</a><BR>
 <LI><a href="#[4c]">ADC0_SEQA_DriverIRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[4c]">ADC0_SEQA_DriverIRQHandler</a><BR>
 <LI><a href="#[85]">CLOCK_GetFlexCommClkFreq</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[77]">CLOCK_GetFreq</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[4c]">ADC0_SEQA_DriverIRQHandler</a> from startup_lpc54114_cm4.o(.text) referenced from startup_lpc54114_cm4.o(.text)
 <LI><a href="#[21]">ADC0_SEQA_IRQHandler</a> from startup_lpc54114_cm4.o(.text) referenced from startup_lpc54114_cm4.o(RESET)
 <LI><a href="#[4d]">ADC0_SEQB_DriverIRQHandler</a> from startup_lpc54114_cm4.o(.text) referenced from startup_lpc54114_cm4.o(.text)
 <LI><a href="#[22]">ADC0_SEQB_IRQHandler</a> from startup_lpc54114_cm4.o(.text) referenced from startup_lpc54114_cm4.o(RESET)
 <LI><a href="#[4e]">ADC0_THCMP_DriverIRQHandler</a> from startup_lpc54114_cm4.o(.text) referenced from startup_lpc54114_cm4.o(.text)
 <LI><a href="#[23]">ADC0_THCMP_IRQHandler</a> from startup_lpc54114_cm4.o(.text) referenced from startup_lpc54114_cm4.o(RESET)
 <LI><a href="#[5]">BusFault_Handler</a> from startup_lpc54114_cm4.o(.text) referenced from startup_lpc54114_cm4.o(RESET)
 <LI><a href="#[40]">CTIMER0_DriverIRQHandler</a> from fsl_ctimer.o(i.CTIMER0_DriverIRQHandler) referenced from startup_lpc54114_cm4.o(.text)
 <LI><a href="#[15]">CTIMER0_IRQHandler</a> from startup_lpc54114_cm4.o(.text) referenced from startup_lpc54114_cm4.o(RESET)
 <LI><a href="#[41]">CTIMER1_DriverIRQHandler</a> from fsl_ctimer.o(i.CTIMER1_DriverIRQHandler) referenced from startup_lpc54114_cm4.o(.text)
 <LI><a href="#[16]">CTIMER1_IRQHandler</a> from startup_lpc54114_cm4.o(.text) referenced from startup_lpc54114_cm4.o(RESET)
 <LI><a href="#[5a]">CTIMER2_DriverIRQHandler</a> from fsl_ctimer.o(i.CTIMER2_DriverIRQHandler) referenced from startup_lpc54114_cm4.o(.text)
 <LI><a href="#[2f]">CTIMER2_IRQHandler</a> from startup_lpc54114_cm4.o(.text) referenced from startup_lpc54114_cm4.o(RESET)
 <LI><a href="#[43]">CTIMER3_DriverIRQHandler</a> from fsl_ctimer.o(i.CTIMER3_DriverIRQHandler) referenced from startup_lpc54114_cm4.o(.text)
 <LI><a href="#[18]">CTIMER3_IRQHandler</a> from startup_lpc54114_cm4.o(.text) referenced from startup_lpc54114_cm4.o(RESET)
 <LI><a href="#[5b]">CTIMER4_DriverIRQHandler</a> from fsl_ctimer.o(i.CTIMER4_DriverIRQHandler) referenced from startup_lpc54114_cm4.o(.text)
 <LI><a href="#[30]">CTIMER4_IRQHandler</a> from startup_lpc54114_cm4.o(.text) referenced from startup_lpc54114_cm4.o(RESET)
 <LI><a href="#[37]">DMA0_DriverIRQHandler</a> from fsl_dma.o(i.DMA0_DriverIRQHandler) referenced from startup_lpc54114_cm4.o(.text)
 <LI><a href="#[c]">DMA0_IRQHandler</a> from startup_lpc54114_cm4.o(.text) referenced from startup_lpc54114_cm4.o(RESET)
 <LI><a href="#[4f]">DMIC0_DriverIRQHandler</a> from fsl_dmic.o(i.DMIC0_DriverIRQHandler) referenced from startup_lpc54114_cm4.o(.text)
 <LI><a href="#[24]">DMIC0_IRQHandler</a> from startup_lpc54114_cm4.o(.text) referenced from startup_lpc54114_cm4.o(RESET)
 <LI><a href="#[8]">DebugMon_Handler</a> from startup_lpc54114_cm4.o(.text) referenced from startup_lpc54114_cm4.o(RESET)
 <LI><a href="#[44]">FLEXCOMM0_DriverIRQHandler</a> from fsl_flexcomm.o(i.FLEXCOMM0_DriverIRQHandler) referenced from startup_lpc54114_cm4.o(.text)
 <LI><a href="#[19]">FLEXCOMM0_IRQHandler</a> from startup_lpc54114_cm4.o(.text) referenced from startup_lpc54114_cm4.o(RESET)
 <LI><a href="#[45]">FLEXCOMM1_DriverIRQHandler</a> from fsl_flexcomm.o(i.FLEXCOMM1_DriverIRQHandler) referenced from startup_lpc54114_cm4.o(.text)
 <LI><a href="#[1a]">FLEXCOMM1_IRQHandler</a> from startup_lpc54114_cm4.o(.text) referenced from startup_lpc54114_cm4.o(RESET)
 <LI><a href="#[46]">FLEXCOMM2_DriverIRQHandler</a> from fsl_flexcomm.o(i.FLEXCOMM2_DriverIRQHandler) referenced from startup_lpc54114_cm4.o(.text)
 <LI><a href="#[1b]">FLEXCOMM2_IRQHandler</a> from startup_lpc54114_cm4.o(.text) referenced from startup_lpc54114_cm4.o(RESET)
 <LI><a href="#[47]">FLEXCOMM3_DriverIRQHandler</a> from fsl_flexcomm.o(i.FLEXCOMM3_DriverIRQHandler) referenced from startup_lpc54114_cm4.o(.text)
 <LI><a href="#[1c]">FLEXCOMM3_IRQHandler</a> from startup_lpc54114_cm4.o(.text) referenced from startup_lpc54114_cm4.o(RESET)
 <LI><a href="#[48]">FLEXCOMM4_DriverIRQHandler</a> from fsl_flexcomm.o(i.FLEXCOMM4_DriverIRQHandler) referenced from startup_lpc54114_cm4.o(.text)
 <LI><a href="#[1d]">FLEXCOMM4_IRQHandler</a> from startup_lpc54114_cm4.o(.text) referenced from startup_lpc54114_cm4.o(RESET)
 <LI><a href="#[49]">FLEXCOMM5_DriverIRQHandler</a> from fsl_flexcomm.o(i.FLEXCOMM5_DriverIRQHandler) referenced from startup_lpc54114_cm4.o(.text)
 <LI><a href="#[1e]">FLEXCOMM5_IRQHandler</a> from startup_lpc54114_cm4.o(.text) referenced from startup_lpc54114_cm4.o(RESET)
 <LI><a href="#[4a]">FLEXCOMM6_DriverIRQHandler</a> from fsl_flexcomm.o(i.FLEXCOMM6_DriverIRQHandler) referenced from startup_lpc54114_cm4.o(.text)
 <LI><a href="#[1f]">FLEXCOMM6_IRQHandler</a> from startup_lpc54114_cm4.o(.text) referenced from startup_lpc54114_cm4.o(RESET)
 <LI><a href="#[4b]">FLEXCOMM7_DriverIRQHandler</a> from fsl_flexcomm.o(i.FLEXCOMM7_DriverIRQHandler) referenced from startup_lpc54114_cm4.o(.text)
 <LI><a href="#[20]">FLEXCOMM7_IRQHandler</a> from startup_lpc54114_cm4.o(.text) referenced from startup_lpc54114_cm4.o(RESET)
 <LI><a href="#[38]">GINT0_DriverIRQHandler</a> from fsl_gint.o(i.GINT0_DriverIRQHandler) referenced from startup_lpc54114_cm4.o(.text)
 <LI><a href="#[d]">GINT0_IRQHandler</a> from startup_lpc54114_cm4.o(.text) referenced from startup_lpc54114_cm4.o(RESET)
 <LI><a href="#[39]">GINT1_DriverIRQHandler</a> from fsl_gint.o(i.GINT1_DriverIRQHandler) referenced from startup_lpc54114_cm4.o(.text)
 <LI><a href="#[e]">GINT1_IRQHandler</a> from startup_lpc54114_cm4.o(.text) referenced from startup_lpc54114_cm4.o(RESET)
 <LI><a href="#[50]">HWVAD0_DriverIRQHandler</a> from startup_lpc54114_cm4.o(.text) referenced from startup_lpc54114_cm4.o(.text)
 <LI><a href="#[25]">HWVAD0_IRQHandler</a> from fsl_dmic.o(i.HWVAD0_IRQHandler) referenced from startup_lpc54114_cm4.o(RESET)
 <LI><a href="#[3]">HardFault_Handler</a> from startup_lpc54114_cm4.o(.text) referenced from startup_lpc54114_cm4.o(RESET)
 <LI><a href="#[54]">IOH_DriverIRQHandler</a> from startup_lpc54114_cm4.o(.text) referenced from startup_lpc54114_cm4.o(.text)
 <LI><a href="#[29]">IOH_IRQHandler</a> from startup_lpc54114_cm4.o(.text) referenced from startup_lpc54114_cm4.o(RESET)
 <LI><a href="#[55]">MAILBOX_DriverIRQHandler</a> from startup_lpc54114_cm4.o(.text) referenced from startup_lpc54114_cm4.o(.text)
 <LI><a href="#[2a]">MAILBOX_IRQHandler</a> from startup_lpc54114_cm4.o(.text) referenced from startup_lpc54114_cm4.o(RESET)
 <LI><a href="#[3f]">MRT0_DriverIRQHandler</a> from startup_lpc54114_cm4.o(.text) referenced from startup_lpc54114_cm4.o(.text)
 <LI><a href="#[14]">MRT0_IRQHandler</a> from startup_lpc54114_cm4.o(.text) referenced from startup_lpc54114_cm4.o(RESET)
 <LI><a href="#[4]">MemManage_Handler</a> from startup_lpc54114_cm4.o(.text) referenced from startup_lpc54114_cm4.o(RESET)
 <LI><a href="#[2]">NMI_Handler</a> from startup_lpc54114_cm4.o(.text) referenced from startup_lpc54114_cm4.o(RESET)
 <LI><a href="#[3a]">PIN_INT0_DriverIRQHandler</a> from fsl_pint.o(i.PIN_INT0_DriverIRQHandler) referenced from startup_lpc54114_cm4.o(.text)
 <LI><a href="#[f]">PIN_INT0_IRQHandler</a> from startup_lpc54114_cm4.o(.text) referenced from startup_lpc54114_cm4.o(RESET)
 <LI><a href="#[3b]">PIN_INT1_DriverIRQHandler</a> from fsl_pint.o(i.PIN_INT1_DriverIRQHandler) referenced from startup_lpc54114_cm4.o(.text)
 <LI><a href="#[10]">PIN_INT1_IRQHandler</a> from startup_lpc54114_cm4.o(.text) referenced from startup_lpc54114_cm4.o(RESET)
 <LI><a href="#[3c]">PIN_INT2_DriverIRQHandler</a> from fsl_pint.o(i.PIN_INT2_DriverIRQHandler) referenced from startup_lpc54114_cm4.o(.text)
 <LI><a href="#[11]">PIN_INT2_IRQHandler</a> from startup_lpc54114_cm4.o(.text) referenced from startup_lpc54114_cm4.o(RESET)
 <LI><a href="#[3d]">PIN_INT3_DriverIRQHandler</a> from fsl_pint.o(i.PIN_INT3_DriverIRQHandler) referenced from startup_lpc54114_cm4.o(.text)
 <LI><a href="#[12]">PIN_INT3_IRQHandler</a> from startup_lpc54114_cm4.o(.text) referenced from startup_lpc54114_cm4.o(RESET)
 <LI><a href="#[56]">PIN_INT4_DriverIRQHandler</a> from fsl_pint.o(i.PIN_INT4_DriverIRQHandler) referenced from startup_lpc54114_cm4.o(.text)
 <LI><a href="#[2b]">PIN_INT4_IRQHandler</a> from startup_lpc54114_cm4.o(.text) referenced from startup_lpc54114_cm4.o(RESET)
 <LI><a href="#[57]">PIN_INT5_DriverIRQHandler</a> from fsl_pint.o(i.PIN_INT5_DriverIRQHandler) referenced from startup_lpc54114_cm4.o(.text)
 <LI><a href="#[2c]">PIN_INT5_IRQHandler</a> from startup_lpc54114_cm4.o(.text) referenced from startup_lpc54114_cm4.o(RESET)
 <LI><a href="#[58]">PIN_INT6_DriverIRQHandler</a> from fsl_pint.o(i.PIN_INT6_DriverIRQHandler) referenced from startup_lpc54114_cm4.o(.text)
 <LI><a href="#[2d]">PIN_INT6_IRQHandler</a> from startup_lpc54114_cm4.o(.text) referenced from startup_lpc54114_cm4.o(RESET)
 <LI><a href="#[59]">PIN_INT7_DriverIRQHandler</a> from fsl_pint.o(i.PIN_INT7_DriverIRQHandler) referenced from startup_lpc54114_cm4.o(.text)
 <LI><a href="#[2e]">PIN_INT7_IRQHandler</a> from startup_lpc54114_cm4.o(.text) referenced from startup_lpc54114_cm4.o(RESET)
 <LI><a href="#[9]">PendSV_Handler</a> from startup_lpc54114_cm4.o(.text) referenced from startup_lpc54114_cm4.o(RESET)
 <LI><a href="#[53]">RTC_DriverIRQHandler</a> from startup_lpc54114_cm4.o(.text) referenced from startup_lpc54114_cm4.o(.text)
 <LI><a href="#[28]">RTC_IRQHandler</a> from startup_lpc54114_cm4.o(.text) referenced from startup_lpc54114_cm4.o(RESET)
 <LI><a href="#[5c]">Reserved54_DriverIRQHandler</a> from startup_lpc54114_cm4.o(.text) referenced from startup_lpc54114_cm4.o(.text)
 <LI><a href="#[31]">Reserved54_IRQHandler</a> from startup_lpc54114_cm4.o(.text) referenced from startup_lpc54114_cm4.o(RESET)
 <LI><a href="#[1]">Reset_Handler</a> from startup_lpc54114_cm4.o(.text) referenced from startup_lpc54114_cm4.o(RESET)
 <LI><a href="#[42]">SCT0_DriverIRQHandler</a> from startup_lpc54114_cm4.o(.text) referenced from startup_lpc54114_cm4.o(.text)
 <LI><a href="#[17]">SCT0_IRQHandler</a> from fsl_sctimer.o(i.SCT0_IRQHandler) referenced from startup_lpc54114_cm4.o(RESET)
 <LI><a href="#[5d]">SPIFI0_DriverIRQHandler</a> from startup_lpc54114_cm4.o(.text) referenced from startup_lpc54114_cm4.o(.text)
 <LI><a href="#[32]">SPIFI0_IRQHandler</a> from startup_lpc54114_cm4.o(.text) referenced from startup_lpc54114_cm4.o(RESET)
 <LI><a href="#[7]">SVC_Handler</a> from startup_lpc54114_cm4.o(.text) referenced from startup_lpc54114_cm4.o(RESET)
 <LI><a href="#[a]">SysTick_Handler</a> from main_m4f.o(i.SysTick_Handler) referenced from startup_lpc54114_cm4.o(RESET)
 <LI><a href="#[34]">SystemInit</a> from system_lpc54114_cm4.o(i.SystemInit) referenced from startup_lpc54114_cm4.o(.text)
 <LI><a href="#[5f]">USART_ReadBlocking</a> from fsl_usart.o(i.USART_ReadBlocking) referenced from fsl_debug_console.o(i.DbgConsole_Init)
 <LI><a href="#[5e]">USART_WriteBlocking</a> from fsl_usart.o(i.USART_WriteBlocking) referenced from fsl_debug_console.o(i.DbgConsole_Init)
 <LI><a href="#[52]">USB0_DriverIRQHandler</a> from startup_lpc54114_cm4.o(.text) referenced from startup_lpc54114_cm4.o(.text)
 <LI><a href="#[27]">USB0_IRQHandler</a> from startup_lpc54114_cm4.o(.text) referenced from startup_lpc54114_cm4.o(RESET)
 <LI><a href="#[51]">USB0_NEEDCLK_DriverIRQHandler</a> from startup_lpc54114_cm4.o(.text) referenced from startup_lpc54114_cm4.o(.text)
 <LI><a href="#[26]">USB0_NEEDCLK_IRQHandler</a> from startup_lpc54114_cm4.o(.text) referenced from startup_lpc54114_cm4.o(RESET)
 <LI><a href="#[3e]">UTICK0_DriverIRQHandler</a> from fsl_utick.o(i.UTICK0_DriverIRQHandler) referenced from startup_lpc54114_cm4.o(.text)
 <LI><a href="#[13]">UTICK0_IRQHandler</a> from startup_lpc54114_cm4.o(.text) referenced from startup_lpc54114_cm4.o(RESET)
 <LI><a href="#[6]">UsageFault_Handler</a> from startup_lpc54114_cm4.o(.text) referenced from startup_lpc54114_cm4.o(RESET)
 <LI><a href="#[36]">WDT_BOD_DriverIRQHandler</a> from startup_lpc54114_cm4.o(.text) referenced from startup_lpc54114_cm4.o(.text)
 <LI><a href="#[b]">WDT_BOD_IRQHandler</a> from startup_lpc54114_cm4.o(.text) referenced from startup_lpc54114_cm4.o(RESET)
 <LI><a href="#[35]">__main</a> from entry.o(.ARM.Collect$$$$00000000) referenced from startup_lpc54114_cm4.o(.text)
 <LI><a href="#[33]">main</a> from main_m4f.o(i.main) referenced from entry9a.o(.ARM.Collect$$$$0000000B)
 <LI><a href="#[66]">mcmgr_get_core_property_lpc54114</a> from mcmgr_internal_core_api_lpc54114.o(i.mcmgr_get_core_property_lpc54114) referenced 2 times from mcmgr_internal_core_api_lpc54114.o(.constdata)
 <LI><a href="#[67]">mcmgr_get_current_core_lpc54114</a> from mcmgr_internal_core_api_lpc54114.o(i.mcmgr_get_current_core_lpc54114) referenced from mcmgr_internal_core_api_lpc54114.o(.constdata)
 <LI><a href="#[63]">mcmgr_get_startup_data_lpc54114</a> from mcmgr_internal_core_api_lpc54114.o(i.mcmgr_get_startup_data_lpc54114) referenced 2 times from mcmgr_internal_core_api_lpc54114.o(.constdata)
 <LI><a href="#[60]">mcmgr_init_lpc54114</a> from mcmgr_internal_core_api_lpc54114.o(i.mcmgr_init_lpc54114) referenced 2 times from mcmgr_internal_core_api_lpc54114.o(.constdata)
 <LI><a href="#[61]">mcmgr_load_app_lpc54114</a> from mcmgr_internal_core_api_lpc54114.o(i.mcmgr_load_app_lpc54114) referenced 2 times from mcmgr_internal_core_api_lpc54114.o(.constdata)
 <LI><a href="#[64]">mcmgr_signal_ready_lpc54114</a> from mcmgr_internal_core_api_lpc54114.o(i.mcmgr_signal_ready_lpc54114) referenced 2 times from mcmgr_internal_core_api_lpc54114.o(.constdata)
 <LI><a href="#[62]">mcmgr_start_core_lpc54114</a> from mcmgr_internal_core_api_lpc54114.o(i.mcmgr_start_core_lpc54114) referenced 2 times from mcmgr_internal_core_api_lpc54114.o(.constdata)
 <LI><a href="#[65]">mcmgr_stop_core_lpc54114</a> from mcmgr_internal_core_api_lpc54114.o(i.mcmgr_stop_core_lpc54114) referenced 2 times from mcmgr_internal_core_api_lpc54114.o(.constdata)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[35]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc54114_cm4.o(.text)
</UL>
<P><STRONG><a name="[af]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry4.o(.ARM.Collect$$$$00000003))

<P><STRONG><a name="[68]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[6d]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[b0]"></a>_main_clock</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7b.o(.ARM.Collect$$$$00000008))

<P><STRONG><a name="[b1]"></a>_main_cpp_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8b.o(.ARM.Collect$$$$0000000A))

<P><STRONG><a name="[b2]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry9a.o(.ARM.Collect$$$$0000000B))

<P><STRONG><a name="[b3]"></a>__rt_final_cpp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry10a.o(.ARM.Collect$$$$0000000D))

<P><STRONG><a name="[b4]"></a>__rt_final_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry11a.o(.ARM.Collect$$$$0000000F))

<P><STRONG><a name="[1]"></a>Reset_Handler</STRONG> (Thumb, 66 bytes, Stack size 0 bytes, startup_lpc54114_cm4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc54114_cm4.o(RESET)
</UL>
<P><STRONG><a name="[2]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_lpc54114_cm4.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc54114_cm4.o(RESET)
</UL>
<P><STRONG><a name="[3]"></a>HardFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_lpc54114_cm4.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc54114_cm4.o(RESET)
</UL>
<P><STRONG><a name="[4]"></a>MemManage_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_lpc54114_cm4.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc54114_cm4.o(RESET)
</UL>
<P><STRONG><a name="[5]"></a>BusFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_lpc54114_cm4.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc54114_cm4.o(RESET)
</UL>
<P><STRONG><a name="[6]"></a>UsageFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_lpc54114_cm4.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc54114_cm4.o(RESET)
</UL>
<P><STRONG><a name="[7]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_lpc54114_cm4.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc54114_cm4.o(RESET)
</UL>
<P><STRONG><a name="[8]"></a>DebugMon_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_lpc54114_cm4.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugMon_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugMon_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc54114_cm4.o(RESET)
</UL>
<P><STRONG><a name="[9]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_lpc54114_cm4.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc54114_cm4.o(RESET)
</UL>
<P><STRONG><a name="[b]"></a>WDT_BOD_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_lpc54114_cm4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc54114_cm4.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>DMA0_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_lpc54114_cm4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc54114_cm4.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>GINT0_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_lpc54114_cm4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc54114_cm4.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>GINT1_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_lpc54114_cm4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc54114_cm4.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>PIN_INT0_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_lpc54114_cm4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc54114_cm4.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>PIN_INT1_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_lpc54114_cm4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc54114_cm4.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>PIN_INT2_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_lpc54114_cm4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc54114_cm4.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>PIN_INT3_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_lpc54114_cm4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc54114_cm4.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>UTICK0_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_lpc54114_cm4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc54114_cm4.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>MRT0_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_lpc54114_cm4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc54114_cm4.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>CTIMER0_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_lpc54114_cm4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc54114_cm4.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>CTIMER1_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_lpc54114_cm4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc54114_cm4.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>CTIMER3_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_lpc54114_cm4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc54114_cm4.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>FLEXCOMM0_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_lpc54114_cm4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc54114_cm4.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>FLEXCOMM1_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_lpc54114_cm4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc54114_cm4.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>FLEXCOMM2_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_lpc54114_cm4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc54114_cm4.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>FLEXCOMM3_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_lpc54114_cm4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc54114_cm4.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>FLEXCOMM4_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_lpc54114_cm4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc54114_cm4.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>FLEXCOMM5_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_lpc54114_cm4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc54114_cm4.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>FLEXCOMM6_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_lpc54114_cm4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc54114_cm4.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>FLEXCOMM7_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_lpc54114_cm4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc54114_cm4.o(RESET)
</UL>
<P><STRONG><a name="[21]"></a>ADC0_SEQA_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_lpc54114_cm4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc54114_cm4.o(RESET)
</UL>
<P><STRONG><a name="[22]"></a>ADC0_SEQB_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_lpc54114_cm4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc54114_cm4.o(RESET)
</UL>
<P><STRONG><a name="[23]"></a>ADC0_THCMP_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_lpc54114_cm4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc54114_cm4.o(RESET)
</UL>
<P><STRONG><a name="[24]"></a>DMIC0_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_lpc54114_cm4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc54114_cm4.o(RESET)
</UL>
<P><STRONG><a name="[26]"></a>USB0_NEEDCLK_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_lpc54114_cm4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc54114_cm4.o(RESET)
</UL>
<P><STRONG><a name="[27]"></a>USB0_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_lpc54114_cm4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc54114_cm4.o(RESET)
</UL>
<P><STRONG><a name="[28]"></a>RTC_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_lpc54114_cm4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc54114_cm4.o(RESET)
</UL>
<P><STRONG><a name="[29]"></a>IOH_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_lpc54114_cm4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc54114_cm4.o(RESET)
</UL>
<P><STRONG><a name="[2a]"></a>MAILBOX_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_lpc54114_cm4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc54114_cm4.o(RESET)
</UL>
<P><STRONG><a name="[2b]"></a>PIN_INT4_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_lpc54114_cm4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc54114_cm4.o(RESET)
</UL>
<P><STRONG><a name="[2c]"></a>PIN_INT5_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_lpc54114_cm4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc54114_cm4.o(RESET)
</UL>
<P><STRONG><a name="[2d]"></a>PIN_INT6_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_lpc54114_cm4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc54114_cm4.o(RESET)
</UL>
<P><STRONG><a name="[2e]"></a>PIN_INT7_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_lpc54114_cm4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc54114_cm4.o(RESET)
</UL>
<P><STRONG><a name="[2f]"></a>CTIMER2_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_lpc54114_cm4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc54114_cm4.o(RESET)
</UL>
<P><STRONG><a name="[30]"></a>CTIMER4_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_lpc54114_cm4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc54114_cm4.o(RESET)
</UL>
<P><STRONG><a name="[31]"></a>Reserved54_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_lpc54114_cm4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc54114_cm4.o(RESET)
</UL>
<P><STRONG><a name="[32]"></a>SPIFI0_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_lpc54114_cm4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc54114_cm4.o(RESET)
</UL>
<P><STRONG><a name="[4c]"></a>ADC0_SEQA_DriverIRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc54114_cm4.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC0_SEQA_DriverIRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC0_SEQA_DriverIRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc54114_cm4.o(.text)
</UL>
<P><STRONG><a name="[4d]"></a>ADC0_SEQB_DriverIRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc54114_cm4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc54114_cm4.o(.text)
</UL>
<P><STRONG><a name="[4e]"></a>ADC0_THCMP_DriverIRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc54114_cm4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc54114_cm4.o(.text)
</UL>
<P><STRONG><a name="[50]"></a>HWVAD0_DriverIRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc54114_cm4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc54114_cm4.o(.text)
</UL>
<P><STRONG><a name="[54]"></a>IOH_DriverIRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc54114_cm4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc54114_cm4.o(.text)
</UL>
<P><STRONG><a name="[55]"></a>MAILBOX_DriverIRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc54114_cm4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc54114_cm4.o(.text)
</UL>
<P><STRONG><a name="[3f]"></a>MRT0_DriverIRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc54114_cm4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc54114_cm4.o(.text)
</UL>
<P><STRONG><a name="[53]"></a>RTC_DriverIRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc54114_cm4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc54114_cm4.o(.text)
</UL>
<P><STRONG><a name="[5c]"></a>Reserved54_DriverIRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc54114_cm4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc54114_cm4.o(.text)
</UL>
<P><STRONG><a name="[42]"></a>SCT0_DriverIRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc54114_cm4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc54114_cm4.o(.text)
</UL>
<P><STRONG><a name="[5d]"></a>SPIFI0_DriverIRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc54114_cm4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc54114_cm4.o(.text)
</UL>
<P><STRONG><a name="[52]"></a>USB0_DriverIRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc54114_cm4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc54114_cm4.o(.text)
</UL>
<P><STRONG><a name="[51]"></a>USB0_NEEDCLK_DriverIRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc54114_cm4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc54114_cm4.o(.text)
</UL>
<P><STRONG><a name="[36]"></a>WDT_BOD_DriverIRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc54114_cm4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc54114_cm4.o(.text)
</UL>
<P><STRONG><a name="[9c]"></a>__aeabi_memcpy</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, memcpya.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_Write
</UL>

<P><STRONG><a name="[ac]"></a>__aeabi_memcpy4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memcpya.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[b5]"></a>__aeabi_memcpy8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memcpya.o(.text), UNUSED)

<P><STRONG><a name="[6c]"></a>__aeabi_llsl</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, llshl.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>

<P><STRONG><a name="[b6]"></a>_ll_shift_l</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llshl.o(.text), UNUSED)

<P><STRONG><a name="[7f]"></a>CLOCK_GetExtClkFreq</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, fsl_clock.o(i.CLOCK_GetExtClkFreq))
<BR><BR>[Called By]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_GetCoreSysClkFreq
</UL>

<P><STRONG><a name="[83]"></a>CLOCK_GetOsc32KFreq</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, fsl_clock.o(i.CLOCK_GetOsc32KFreq))
<BR><BR>[Called By]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_GetCoreSysClkFreq
</UL>

<P><STRONG><a name="[6a]"></a>__aeabi_uldivmod</STRONG> (Thumb, 98 bytes, Stack size 40 bytes, uldiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = __aeabi_uldivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
</UL>
<BR>[Called By]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_GetFreq
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemCoreClockUpdate
</UL>

<P><STRONG><a name="[6b]"></a>__aeabi_llsr</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, llushr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>

<P><STRONG><a name="[b7]"></a>_ll_ushift_r</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llushr.o(.text), UNUSED)

<P><STRONG><a name="[69]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[b8]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[6e]"></a>BOARD_BootClockFROHF96M</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, clock_config.o(i.BOARD_BootClockFROHF96M))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = BOARD_BootClockFROHF96M &rArr; POWER_SetVoltageForFreq &rArr; POWER_setVdLevel
</UL>
<BR>[Calls]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;POWER_SetVoltageForFreq
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_SetupFROClocking
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_SetFLASHAccessCyclesForFreq
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_SetClkDiv
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_AttachClk
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;POWER_DisablePD
</UL>
<BR>[Called By]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[75]"></a>BOARD_InitDebugConsole</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, board.o(i.BOARD_InitDebugConsole))
<BR><BR>[Stack]<UL><LI>Max Depth = 424<LI>Call Chain = BOARD_InitDebugConsole &rArr; DbgConsole_Init &rArr; USART_Init &rArr; USART_SetBaudRate &rArr; __aeabi_assert &rArr; DbgConsole_Printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintInt &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write
</UL>
<BR>[Calls]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_GetFreq
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DbgConsole_Init
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RESET_PeripheralReset
</UL>
<BR>[Called By]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[7a]"></a>BOARD_InitPins</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, pin_mux.o(i.BOARD_InitPins))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = BOARD_InitPins &rArr; IOCON_PinMuxSet
</UL>
<BR>[Calls]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IOCON_PinMuxSet
</UL>
<BR>[Called By]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[70]"></a>CLOCK_AttachClk</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, fsl_clock.o(i.CLOCK_AttachClk))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = CLOCK_AttachClk
</UL>
<BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BOARD_BootClockFROHF96M
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[7c]"></a>CLOCK_GetAsyncApbClkFreq</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, fsl_clock.o(i.CLOCK_GetAsyncApbClkFreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = CLOCK_GetAsyncApbClkFreq &rArr; CLOCK_GetCoreSysClkFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_GetCoreSysClkFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_GetFreq
</UL>

<P><STRONG><a name="[7d]"></a>CLOCK_GetCoreSysClkFreq</STRONG> (Thumb, 120 bytes, Stack size 4 bytes, fsl_clock.o(i.CLOCK_GetCoreSysClkFreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = CLOCK_GetCoreSysClkFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_GetWdtOscFreq
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_GetPllOutFreq
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_GetOsc32KFreq
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_GetFroHfFreq
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_GetFro12MFreq
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_GetExtClkFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_GetFreq
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_GetFRGInputClock
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_GetAsyncApbClkFreq
</UL>

<P><STRONG><a name="[84]"></a>CLOCK_GetFRGInputClock</STRONG> (Thumb, 60 bytes, Stack size 4 bytes, fsl_clock.o(i.CLOCK_GetFRGInputClock))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = CLOCK_GetFRGInputClock &rArr; CLOCK_GetCoreSysClkFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_GetPllOutFreq
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_GetFroHfFreq
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_GetFro12MFreq
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_GetCoreSysClkFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_GetFreq
</UL>

<P><STRONG><a name="[85]"></a>CLOCK_GetFlexCommClkFreq</STRONG> (Thumb, 88 bytes, Stack size 8 bytes, fsl_clock.o(i.CLOCK_GetFlexCommClkFreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + In Cycle
<LI>Call Chain = CLOCK_GetFlexCommClkFreq &rArr;  CLOCK_GetFreq (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_GetPllOutFreq
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_GetI2SMClkFreq
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_GetFroHfFreq
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_GetFro12MFreq
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_GetFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_GetFreq
</UL>

<P><STRONG><a name="[77]"></a>CLOCK_GetFreq</STRONG> (Thumb, 424 bytes, Stack size 24 bytes, fsl_clock.o(i.CLOCK_GetFreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = CLOCK_GetFreq &rArr; __aeabi_uldivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_GetWdtOscFreq
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_GetPllOutFreq
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_GetI2SMClkFreq
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_GetFroHfFreq
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_GetFro12MFreq
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_GetFlexCommClkFreq
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_GetFRGInputClock
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_GetCoreSysClkFreq
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_GetAsyncApbClkFreq
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_GetFlexCommClkFreq
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BOARD_InitDebugConsole
</UL>

<P><STRONG><a name="[7e]"></a>CLOCK_GetFro12MFreq</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, fsl_clock.o(i.CLOCK_GetFro12MFreq))
<BR><BR>[Called By]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_GetFreq
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_GetFlexCommClkFreq
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_GetFRGInputClock
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_GetCoreSysClkFreq
</UL>

<P><STRONG><a name="[81]"></a>CLOCK_GetFroHfFreq</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, fsl_clock.o(i.CLOCK_GetFroHfFreq))
<BR><BR>[Called By]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_GetFreq
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_GetFlexCommClkFreq
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_GetFRGInputClock
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_GetCoreSysClkFreq
</UL>

<P><STRONG><a name="[86]"></a>CLOCK_GetI2SMClkFreq</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, fsl_clock.o(i.CLOCK_GetI2SMClkFreq))
<BR><BR>[Called By]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_GetFreq
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_GetFlexCommClkFreq
</UL>

<P><STRONG><a name="[82]"></a>CLOCK_GetPllOutFreq</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, fsl_clock.o(i.CLOCK_GetPllOutFreq))
<BR><BR>[Called By]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_GetFreq
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_GetFlexCommClkFreq
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_GetFRGInputClock
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_GetCoreSysClkFreq
</UL>

<P><STRONG><a name="[80]"></a>CLOCK_GetWdtOscFreq</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, fsl_clock.o(i.CLOCK_GetWdtOscFreq))
<BR><BR>[Called By]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_GetFreq
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_GetCoreSysClkFreq
</UL>

<P><STRONG><a name="[74]"></a>CLOCK_SetClkDiv</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, fsl_clock.o(i.CLOCK_SetClkDiv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = CLOCK_SetClkDiv
</UL>
<BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BOARD_BootClockFROHF96M
</UL>

<P><STRONG><a name="[72]"></a>CLOCK_SetFLASHAccessCyclesForFreq</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, fsl_clock.o(i.CLOCK_SetFLASHAccessCyclesForFreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = CLOCK_SetFLASHAccessCyclesForFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_SetFLASHAccessCycles
</UL>
<BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BOARD_BootClockFROHF96M
</UL>

<P><STRONG><a name="[73]"></a>CLOCK_SetupFROClocking</STRONG> (Thumb, 138 bytes, Stack size 16 bytes, fsl_clock.o(i.CLOCK_SetupFROClocking))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = CLOCK_SetupFROClocking
</UL>
<BR>[Calls]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;POWER_DisablePD
</UL>
<BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BOARD_BootClockFROHF96M
</UL>

<P><STRONG><a name="[40]"></a>CTIMER0_DriverIRQHandler</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, fsl_ctimer.o(i.CTIMER0_DriverIRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = CTIMER0_DriverIRQHandler &rArr; CTIMER_GenericIRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CTIMER_GenericIRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc54114_cm4.o(.text)
</UL>
<P><STRONG><a name="[41]"></a>CTIMER1_DriverIRQHandler</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, fsl_ctimer.o(i.CTIMER1_DriverIRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = CTIMER1_DriverIRQHandler &rArr; CTIMER_GenericIRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CTIMER_GenericIRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc54114_cm4.o(.text)
</UL>
<P><STRONG><a name="[5a]"></a>CTIMER2_DriverIRQHandler</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, fsl_ctimer.o(i.CTIMER2_DriverIRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = CTIMER2_DriverIRQHandler &rArr; CTIMER_GenericIRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CTIMER_GenericIRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc54114_cm4.o(.text)
</UL>
<P><STRONG><a name="[43]"></a>CTIMER3_DriverIRQHandler</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, fsl_ctimer.o(i.CTIMER3_DriverIRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = CTIMER3_DriverIRQHandler &rArr; CTIMER_GenericIRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CTIMER_GenericIRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc54114_cm4.o(.text)
</UL>
<P><STRONG><a name="[5b]"></a>CTIMER4_DriverIRQHandler</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, fsl_ctimer.o(i.CTIMER4_DriverIRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = CTIMER4_DriverIRQHandler &rArr; CTIMER_GenericIRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CTIMER_GenericIRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc54114_cm4.o(.text)
</UL>
<P><STRONG><a name="[89]"></a>CTIMER_GenericIRQHandler</STRONG> (Thumb, 110 bytes, Stack size 24 bytes, fsl_ctimer.o(i.CTIMER_GenericIRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = CTIMER_GenericIRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CTIMER_ClearStatusFlags
</UL>
<BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CTIMER4_DriverIRQHandler
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CTIMER3_DriverIRQHandler
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CTIMER2_DriverIRQHandler
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CTIMER1_DriverIRQHandler
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CTIMER0_DriverIRQHandler
</UL>

<P><STRONG><a name="[37]"></a>DMA0_DriverIRQHandler</STRONG> (Thumb, 168 bytes, Stack size 24 bytes, fsl_dma.o(i.DMA0_DriverIRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = DMA0_DriverIRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc54114_cm4.o(.text)
</UL>
<P><STRONG><a name="[4f]"></a>DMIC0_DriverIRQHandler</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, fsl_dmic.o(i.DMIC0_DriverIRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = DMIC0_DriverIRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc54114_cm4.o(.text)
</UL>
<P><STRONG><a name="[78]"></a>DbgConsole_Init</STRONG> (Thumb, 74 bytes, Stack size 32 bytes, fsl_debug_console.o(i.DbgConsole_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 408<LI>Call Chain = DbgConsole_Init &rArr; USART_Init &rArr; USART_SetBaudRate &rArr; __aeabi_assert &rArr; DbgConsole_Printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintInt &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write
</UL>
<BR>[Calls]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Init
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_GetDefaultConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BOARD_InitDebugConsole
</UL>

<P><STRONG><a name="[8d]"></a>DbgConsole_Printf</STRONG> (Thumb, 24 bytes, Stack size 24 bytes, fsl_debug_console.o(i.DbgConsole_Printf))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = DbgConsole_Printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintInt &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write
</UL>
<BR>[Calls]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_vprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>

<P><STRONG><a name="[44]"></a>FLEXCOMM0_DriverIRQHandler</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, fsl_flexcomm.o(i.FLEXCOMM0_DriverIRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 312<LI>Call Chain = FLEXCOMM0_DriverIRQHandler &rArr; __aeabi_assert &rArr; DbgConsole_Printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintInt &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write
</UL>
<BR>[Calls]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc54114_cm4.o(.text)
</UL>
<P><STRONG><a name="[45]"></a>FLEXCOMM1_DriverIRQHandler</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, fsl_flexcomm.o(i.FLEXCOMM1_DriverIRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 312<LI>Call Chain = FLEXCOMM1_DriverIRQHandler &rArr; __aeabi_assert &rArr; DbgConsole_Printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintInt &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write
</UL>
<BR>[Calls]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc54114_cm4.o(.text)
</UL>
<P><STRONG><a name="[46]"></a>FLEXCOMM2_DriverIRQHandler</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, fsl_flexcomm.o(i.FLEXCOMM2_DriverIRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 312<LI>Call Chain = FLEXCOMM2_DriverIRQHandler &rArr; __aeabi_assert &rArr; DbgConsole_Printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintInt &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write
</UL>
<BR>[Calls]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc54114_cm4.o(.text)
</UL>
<P><STRONG><a name="[47]"></a>FLEXCOMM3_DriverIRQHandler</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, fsl_flexcomm.o(i.FLEXCOMM3_DriverIRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 312<LI>Call Chain = FLEXCOMM3_DriverIRQHandler &rArr; __aeabi_assert &rArr; DbgConsole_Printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintInt &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write
</UL>
<BR>[Calls]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc54114_cm4.o(.text)
</UL>
<P><STRONG><a name="[48]"></a>FLEXCOMM4_DriverIRQHandler</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, fsl_flexcomm.o(i.FLEXCOMM4_DriverIRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 312<LI>Call Chain = FLEXCOMM4_DriverIRQHandler &rArr; __aeabi_assert &rArr; DbgConsole_Printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintInt &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write
</UL>
<BR>[Calls]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc54114_cm4.o(.text)
</UL>
<P><STRONG><a name="[49]"></a>FLEXCOMM5_DriverIRQHandler</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, fsl_flexcomm.o(i.FLEXCOMM5_DriverIRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 312<LI>Call Chain = FLEXCOMM5_DriverIRQHandler &rArr; __aeabi_assert &rArr; DbgConsole_Printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintInt &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write
</UL>
<BR>[Calls]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc54114_cm4.o(.text)
</UL>
<P><STRONG><a name="[4a]"></a>FLEXCOMM6_DriverIRQHandler</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, fsl_flexcomm.o(i.FLEXCOMM6_DriverIRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 312<LI>Call Chain = FLEXCOMM6_DriverIRQHandler &rArr; __aeabi_assert &rArr; DbgConsole_Printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintInt &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write
</UL>
<BR>[Calls]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc54114_cm4.o(.text)
</UL>
<P><STRONG><a name="[4b]"></a>FLEXCOMM7_DriverIRQHandler</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, fsl_flexcomm.o(i.FLEXCOMM7_DriverIRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 312<LI>Call Chain = FLEXCOMM7_DriverIRQHandler &rArr; __aeabi_assert &rArr; DbgConsole_Printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintInt &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write
</UL>
<BR>[Calls]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc54114_cm4.o(.text)
</UL>
<P><STRONG><a name="[8f]"></a>FLEXCOMM_GetInstance</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, fsl_flexcomm.o(i.FLEXCOMM_GetInstance))
<BR><BR>[Stack]<UL><LI>Max Depth = 320<LI>Call Chain = FLEXCOMM_GetInstance &rArr; __aeabi_assert &rArr; DbgConsole_Printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintInt &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write
</UL>
<BR>[Calls]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLEXCOMM_Init
</UL>

<P><STRONG><a name="[90]"></a>FLEXCOMM_Init</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, fsl_flexcomm.o(i.FLEXCOMM_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 336<LI>Call Chain = FLEXCOMM_Init &rArr; FLEXCOMM_GetInstance &rArr; __aeabi_assert &rArr; DbgConsole_Printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintInt &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write
</UL>
<BR>[Calls]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLEXCOMM_SetPeriph
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLEXCOMM_GetInstance
</UL>
<BR>[Called By]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Init
</UL>

<P><STRONG><a name="[91]"></a>FLEXCOMM_SetPeriph</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, fsl_flexcomm.o(i.FLEXCOMM_SetPeriph))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = FLEXCOMM_SetPeriph &rArr; FLEXCOMM_PeripheralIsPresent
</UL>
<BR>[Calls]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLEXCOMM_PeripheralIsPresent
</UL>
<BR>[Called By]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLEXCOMM_Init
</UL>

<P><STRONG><a name="[38]"></a>GINT0_DriverIRQHandler</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, fsl_gint.o(i.GINT0_DriverIRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GINT0_DriverIRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc54114_cm4.o(.text)
</UL>
<P><STRONG><a name="[39]"></a>GINT1_DriverIRQHandler</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, fsl_gint.o(i.GINT1_DriverIRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GINT1_DriverIRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc54114_cm4.o(.text)
</UL>
<P><STRONG><a name="[25]"></a>HWVAD0_IRQHandler</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, fsl_dmic.o(i.HWVAD0_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HWVAD0_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc54114_cm4.o(RESET)
</UL>
<P><STRONG><a name="[94]"></a>MCMGR_GetCurrentCore</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, mcmgr.o(i.MCMGR_GetCurrentCore))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = MCMGR_GetCurrentCore
</UL>
<BR>[Called By]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MCMGR_Init
</UL>

<P><STRONG><a name="[93]"></a>MCMGR_Init</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, mcmgr.o(i.MCMGR_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = MCMGR_Init &rArr; MCMGR_GetCurrentCore
</UL>
<BR>[Calls]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MCMGR_GetCurrentCore
</UL>
<BR>[Called By]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[ad]"></a>MCMGR_StartCore</STRONG> (Thumb, 54 bytes, Stack size 24 bytes, mcmgr.o(i.MCMGR_StartCore))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = MCMGR_StartCore
</UL>
<BR>[Called By]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[95]"></a>PINT_PatternMatchResetDetectLogic</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, fsl_pint.o(i.PINT_PatternMatchResetDetectLogic))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = PINT_PatternMatchResetDetectLogic
</UL>
<BR>[Called By]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PIN_INT7_DriverIRQHandler
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PIN_INT6_DriverIRQHandler
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PIN_INT5_DriverIRQHandler
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PIN_INT4_DriverIRQHandler
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PIN_INT3_DriverIRQHandler
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PIN_INT2_DriverIRQHandler
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PIN_INT1_DriverIRQHandler
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PIN_INT0_DriverIRQHandler
</UL>

<P><STRONG><a name="[3a]"></a>PIN_INT0_DriverIRQHandler</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, fsl_pint.o(i.PIN_INT0_DriverIRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = PIN_INT0_DriverIRQHandler &rArr; PINT_PatternMatchResetDetectLogic
</UL>
<BR>[Calls]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PINT_PinInterruptClrStatus
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PINT_PatternMatchResetDetectLogic
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc54114_cm4.o(.text)
</UL>
<P><STRONG><a name="[3b]"></a>PIN_INT1_DriverIRQHandler</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, fsl_pint.o(i.PIN_INT1_DriverIRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = PIN_INT1_DriverIRQHandler &rArr; PINT_PatternMatchResetDetectLogic
</UL>
<BR>[Calls]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PINT_PinInterruptClrStatus
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PINT_PatternMatchResetDetectLogic
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc54114_cm4.o(.text)
</UL>
<P><STRONG><a name="[3c]"></a>PIN_INT2_DriverIRQHandler</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, fsl_pint.o(i.PIN_INT2_DriverIRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = PIN_INT2_DriverIRQHandler &rArr; PINT_PatternMatchResetDetectLogic
</UL>
<BR>[Calls]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PINT_PinInterruptClrStatus
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PINT_PatternMatchResetDetectLogic
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc54114_cm4.o(.text)
</UL>
<P><STRONG><a name="[3d]"></a>PIN_INT3_DriverIRQHandler</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, fsl_pint.o(i.PIN_INT3_DriverIRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = PIN_INT3_DriverIRQHandler &rArr; PINT_PatternMatchResetDetectLogic
</UL>
<BR>[Calls]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PINT_PinInterruptClrStatus
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PINT_PatternMatchResetDetectLogic
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc54114_cm4.o(.text)
</UL>
<P><STRONG><a name="[56]"></a>PIN_INT4_DriverIRQHandler</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, fsl_pint.o(i.PIN_INT4_DriverIRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = PIN_INT4_DriverIRQHandler &rArr; PINT_PatternMatchResetDetectLogic
</UL>
<BR>[Calls]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PINT_PinInterruptClrStatus
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PINT_PatternMatchResetDetectLogic
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc54114_cm4.o(.text)
</UL>
<P><STRONG><a name="[57]"></a>PIN_INT5_DriverIRQHandler</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, fsl_pint.o(i.PIN_INT5_DriverIRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = PIN_INT5_DriverIRQHandler &rArr; PINT_PatternMatchResetDetectLogic
</UL>
<BR>[Calls]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PINT_PinInterruptClrStatus
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PINT_PatternMatchResetDetectLogic
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc54114_cm4.o(.text)
</UL>
<P><STRONG><a name="[58]"></a>PIN_INT6_DriverIRQHandler</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, fsl_pint.o(i.PIN_INT6_DriverIRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = PIN_INT6_DriverIRQHandler &rArr; PINT_PatternMatchResetDetectLogic
</UL>
<BR>[Calls]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PINT_PinInterruptClrStatus
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PINT_PatternMatchResetDetectLogic
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc54114_cm4.o(.text)
</UL>
<P><STRONG><a name="[59]"></a>PIN_INT7_DriverIRQHandler</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, fsl_pint.o(i.PIN_INT7_DriverIRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = PIN_INT7_DriverIRQHandler &rArr; PINT_PatternMatchResetDetectLogic
</UL>
<BR>[Calls]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PINT_PinInterruptClrStatus
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PINT_PatternMatchResetDetectLogic
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc54114_cm4.o(.text)
</UL>
<P><STRONG><a name="[71]"></a>POWER_SetVoltageForFreq</STRONG> (Thumb, 260 bytes, Stack size 8 bytes, fsl_power_lib.o(i.POWER_SetVoltageForFreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = POWER_SetVoltageForFreq &rArr; POWER_setVdLevel
</UL>
<BR>[Calls]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;POWER_setVdLevel
</UL>
<BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BOARD_BootClockFROHF96M
</UL>

<P><STRONG><a name="[98]"></a>RESET_ClearPeripheralReset</STRONG> (Thumb, 80 bytes, Stack size 24 bytes, fsl_reset.o(i.RESET_ClearPeripheralReset))
<BR><BR>[Stack]<UL><LI>Max Depth = 328<LI>Call Chain = RESET_ClearPeripheralReset &rArr; __aeabi_assert &rArr; DbgConsole_Printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintInt &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write
</UL>
<BR>[Calls]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RESET_PeripheralReset
</UL>

<P><STRONG><a name="[76]"></a>RESET_PeripheralReset</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, fsl_reset.o(i.RESET_PeripheralReset))
<BR><BR>[Stack]<UL><LI>Max Depth = 336<LI>Call Chain = RESET_PeripheralReset &rArr; RESET_SetPeripheralReset &rArr; __aeabi_assert &rArr; DbgConsole_Printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintInt &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write
</UL>
<BR>[Calls]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RESET_SetPeripheralReset
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RESET_ClearPeripheralReset
</UL>
<BR>[Called By]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BOARD_InitDebugConsole
</UL>

<P><STRONG><a name="[99]"></a>RESET_SetPeripheralReset</STRONG> (Thumb, 80 bytes, Stack size 24 bytes, fsl_reset.o(i.RESET_SetPeripheralReset))
<BR><BR>[Stack]<UL><LI>Max Depth = 328<LI>Call Chain = RESET_SetPeripheralReset &rArr; __aeabi_assert &rArr; DbgConsole_Printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintInt &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write
</UL>
<BR>[Calls]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RESET_PeripheralReset
</UL>

<P><STRONG><a name="[17]"></a>SCT0_IRQHandler</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, fsl_sctimer.o(i.SCT0_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SCT0_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc54114_cm4.o(RESET)
</UL>
<P><STRONG><a name="[9a]"></a>SEGGER_RTT_Write</STRONG> (Thumb, 364 bytes, Stack size 32 bytes, segger_rtt.o(i.SEGGER_RTT_Write))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = SEGGER_RTT_Write
</UL>
<BR>[Calls]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_vprintf
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_StoreChar
</UL>

<P><STRONG><a name="[8e]"></a>SEGGER_RTT_vprintf</STRONG> (Thumb, 504 bytes, Stack size 136 bytes, segger_rtt_printf.o(i.SEGGER_RTT_vprintf))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = SEGGER_RTT_vprintf &rArr; _PrintInt &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write
</UL>
<BR>[Calls]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_StoreChar
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_PrintUnsigned
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_PrintInt
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_Write
</UL>
<BR>[Called By]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DbgConsole_Printf
</UL>

<P><STRONG><a name="[a]"></a>SysTick_Handler</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, main_m4f.o(i.SysTick_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 312<LI>Call Chain = SysTick_Handler &rArr; DbgConsole_Printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintInt &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write
</UL>
<BR>[Calls]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DbgConsole_Printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc54114_cm4.o(RESET)
</UL>
<P><STRONG><a name="[a0]"></a>SystemCoreClockUpdate</STRONG> (Thumb, 316 bytes, Stack size 32 bytes, system_lpc54114_cm4.o(i.SystemCoreClockUpdate))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = SystemCoreClockUpdate &rArr; __aeabi_uldivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;findPllPreDiv
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;findPllPostDiv
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;findPllMMult
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetWdtOscFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[34]"></a>SystemInit</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, system_lpc54114_cm4.o(i.SystemInit))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc54114_cm4.o(.text)
</UL>
<P><STRONG><a name="[8b]"></a>USART_GetDefaultConfig</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, fsl_usart.o(i.USART_GetDefaultConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 312<LI>Call Chain = USART_GetDefaultConfig &rArr; __aeabi_assert &rArr; DbgConsole_Printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintInt &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write
</UL>
<BR>[Calls]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DbgConsole_Init
</UL>

<P><STRONG><a name="[8c]"></a>USART_Init</STRONG> (Thumb, 226 bytes, Stack size 24 bytes, fsl_usart.o(i.USART_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 376<LI>Call Chain = USART_Init &rArr; USART_SetBaudRate &rArr; __aeabi_assert &rArr; DbgConsole_Printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintInt &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write
</UL>
<BR>[Calls]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLEXCOMM_Init
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_SetBaudRate
</UL>
<BR>[Called By]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DbgConsole_Init
</UL>

<P><STRONG><a name="[5f]"></a>USART_ReadBlocking</STRONG> (Thumb, 188 bytes, Stack size 24 bytes, fsl_usart.o(i.USART_ReadBlocking))
<BR><BR>[Stack]<UL><LI>Max Depth = 328<LI>Call Chain = USART_ReadBlocking &rArr; __aeabi_assert &rArr; DbgConsole_Printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintInt &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write
</UL>
<BR>[Calls]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Address Reference Count : 1]<UL><LI> fsl_debug_console.o(i.DbgConsole_Init)
</UL>
<P><STRONG><a name="[a5]"></a>USART_SetBaudRate</STRONG> (Thumb, 152 bytes, Stack size 48 bytes, fsl_usart.o(i.USART_SetBaudRate))
<BR><BR>[Stack]<UL><LI>Max Depth = 352<LI>Call Chain = USART_SetBaudRate &rArr; __aeabi_assert &rArr; DbgConsole_Printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintInt &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write
</UL>
<BR>[Calls]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Init
</UL>

<P><STRONG><a name="[5e]"></a>USART_WriteBlocking</STRONG> (Thumb, 90 bytes, Stack size 16 bytes, fsl_usart.o(i.USART_WriteBlocking))
<BR><BR>[Stack]<UL><LI>Max Depth = 320<LI>Call Chain = USART_WriteBlocking &rArr; __aeabi_assert &rArr; DbgConsole_Printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintInt &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write
</UL>
<BR>[Calls]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Address Reference Count : 1]<UL><LI> fsl_debug_console.o(i.DbgConsole_Init)
</UL>
<P><STRONG><a name="[3e]"></a>UTICK0_DriverIRQHandler</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, fsl_utick.o(i.UTICK0_DriverIRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = UTICK0_DriverIRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc54114_cm4.o(.text)
</UL>
<P><STRONG><a name="[79]"></a>__aeabi_assert</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, fsl_common.o(i.__aeabi_assert))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = __aeabi_assert &rArr; DbgConsole_Printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintInt &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write
</UL>
<BR>[Calls]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DbgConsole_Printf
</UL>
<BR>[Called By]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BOARD_InitDebugConsole
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLEXCOMM_GetInstance
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLEXCOMM7_DriverIRQHandler
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLEXCOMM6_DriverIRQHandler
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLEXCOMM5_DriverIRQHandler
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLEXCOMM4_DriverIRQHandler
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLEXCOMM3_DriverIRQHandler
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLEXCOMM2_DriverIRQHandler
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLEXCOMM1_DriverIRQHandler
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLEXCOMM0_DriverIRQHandler
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_WriteBlocking
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ReadBlocking
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Init
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_GetDefaultConfig
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_SetBaudRate
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RESET_SetPeripheralReset
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RESET_ClearPeripheralReset
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcmgr_start_core_lpc54114
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcmgr_get_startup_data_lpc54114
</UL>

<P><STRONG><a name="[b9]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[ba]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[bb]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)

<P><STRONG><a name="[ab]"></a>get_core1_image_size</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, main_m4f.o(i.get_core1_image_size))
<BR><BR>[Called By]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[33]"></a>main</STRONG> (Thumb, 276 bytes, Stack size 8 bytes, main_m4f.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 432<LI>Call Chain = main &rArr; BOARD_InitDebugConsole &rArr; DbgConsole_Init &rArr; USART_Init &rArr; USART_SetBaudRate &rArr; __aeabi_assert &rArr; DbgConsole_Printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintInt &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write
</UL>
<BR>[Calls]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemCoreClockUpdate
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MCMGR_StartCore
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MCMGR_Init
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DbgConsole_Printf
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_AttachClk
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BOARD_InitPins
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BOARD_InitDebugConsole
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BOARD_BootClockFROHF96M
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_core1_image_size
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IOCON_PinMuxSet
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_EnableClock
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry9a.o(.ARM.Collect$$$$0000000B)
</UL><P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[a9]"></a>CLOCK_EnableClock</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, main_m4f.o(i.CLOCK_EnableClock))
<BR><BR>[Called By]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[aa]"></a>IOCON_PinMuxSet</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, main_m4f.o(i.IOCON_PinMuxSet))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = IOCON_PinMuxSet
</UL>
<BR>[Called By]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[87]"></a>CLOCK_SetFLASHAccessCycles</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, fsl_clock.o(i.CLOCK_SetFLASHAccessCycles))
<BR><BR>[Called By]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_SetFLASHAccessCyclesForFreq
</UL>

<P><STRONG><a name="[88]"></a>POWER_DisablePD</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, fsl_clock.o(i.POWER_DisablePD))
<BR><BR>[Called By]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_SetupFROClocking
</UL>

<P><STRONG><a name="[8a]"></a>CTIMER_ClearStatusFlags</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, fsl_ctimer.o(i.CTIMER_ClearStatusFlags))
<BR><BR>[Called By]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CTIMER_GenericIRQHandler
</UL>

<P><STRONG><a name="[92]"></a>FLEXCOMM_PeripheralIsPresent</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, fsl_flexcomm.o(i.FLEXCOMM_PeripheralIsPresent))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = FLEXCOMM_PeripheralIsPresent
</UL>
<BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLEXCOMM_SetPeriph
</UL>

<P><STRONG><a name="[96]"></a>PINT_PinInterruptClrStatus</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, fsl_pint.o(i.PINT_PinInterruptClrStatus))
<BR><BR>[Called By]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PIN_INT7_DriverIRQHandler
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PIN_INT6_DriverIRQHandler
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PIN_INT5_DriverIRQHandler
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PIN_INT4_DriverIRQHandler
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PIN_INT3_DriverIRQHandler
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PIN_INT2_DriverIRQHandler
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PIN_INT1_DriverIRQHandler
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PIN_INT0_DriverIRQHandler
</UL>

<P><STRONG><a name="[a1]"></a>GetWdtOscFreq</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, system_lpc54114_cm4.o(i.GetWdtOscFreq))
<BR><BR>[Called By]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemCoreClockUpdate
</UL>

<P><STRONG><a name="[a4]"></a>findPllMMult</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, system_lpc54114_cm4.o(i.findPllMMult))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = findPllMMult &rArr; pllDecodeM
</UL>
<BR>[Calls]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pllDecodeM
</UL>
<BR>[Called By]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemCoreClockUpdate
</UL>

<P><STRONG><a name="[a3]"></a>findPllPostDiv</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, system_lpc54114_cm4.o(i.findPllPostDiv))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = findPllPostDiv &rArr; pllDecodeP
</UL>
<BR>[Calls]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pllDecodeP
</UL>
<BR>[Called By]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemCoreClockUpdate
</UL>

<P><STRONG><a name="[a2]"></a>findPllPreDiv</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, system_lpc54114_cm4.o(i.findPllPreDiv))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = findPllPreDiv &rArr; pllDecodeN
</UL>
<BR>[Calls]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pllDecodeN
</UL>
<BR>[Called By]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemCoreClockUpdate
</UL>

<P><STRONG><a name="[a6]"></a>pllDecodeM</STRONG> (Thumb, 88 bytes, Stack size 12 bytes, system_lpc54114_cm4.o(i.pllDecodeM))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = pllDecodeM
</UL>
<BR>[Called By]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;findPllMMult
</UL>

<P><STRONG><a name="[a8]"></a>pllDecodeN</STRONG> (Thumb, 92 bytes, Stack size 12 bytes, system_lpc54114_cm4.o(i.pllDecodeN))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = pllDecodeN
</UL>
<BR>[Called By]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;findPllPreDiv
</UL>

<P><STRONG><a name="[a7]"></a>pllDecodeP</STRONG> (Thumb, 78 bytes, Stack size 12 bytes, system_lpc54114_cm4.o(i.pllDecodeP))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = pllDecodeP
</UL>
<BR>[Called By]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;findPllPostDiv
</UL>

<P><STRONG><a name="[6f]"></a>POWER_DisablePD</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, clock_config.o(i.POWER_DisablePD))
<BR><BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BOARD_BootClockFROHF96M
</UL>

<P><STRONG><a name="[7b]"></a>IOCON_PinMuxSet</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, pin_mux.o(i.IOCON_PinMuxSet))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = IOCON_PinMuxSet
</UL>
<BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BOARD_InitPins
</UL>

<P><STRONG><a name="[9b]"></a>_Init</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, segger_rtt.o(i._Init))
<BR><BR>[Called By]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_Write
</UL>

<P><STRONG><a name="[9e]"></a>_PrintInt</STRONG> (Thumb, 234 bytes, Stack size 48 bytes, segger_rtt_printf.o(i._PrintInt))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = _PrintInt &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write
</UL>
<BR>[Calls]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_StoreChar
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_PrintUnsigned
</UL>
<BR>[Called By]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_vprintf
</UL>

<P><STRONG><a name="[9f]"></a>_PrintUnsigned</STRONG> (Thumb, 240 bytes, Stack size 48 bytes, segger_rtt_printf.o(i._PrintUnsigned))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write
</UL>
<BR>[Calls]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_StoreChar
</UL>
<BR>[Called By]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_vprintf
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_PrintInt
</UL>

<P><STRONG><a name="[9d]"></a>_StoreChar</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, segger_rtt_printf.o(i._StoreChar))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _StoreChar &rArr; SEGGER_RTT_Write
</UL>
<BR>[Calls]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_Write
</UL>
<BR>[Called By]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_vprintf
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_PrintUnsigned
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_PrintInt
</UL>

<P><STRONG><a name="[ae]"></a>MAILBOX_Init</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, mcmgr_internal_core_api_lpc54114.o(i.MAILBOX_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = MAILBOX_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcmgr_init_lpc54114
</UL>

<P><STRONG><a name="[66]"></a>mcmgr_get_core_property_lpc54114</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, mcmgr_internal_core_api_lpc54114.o(i.mcmgr_get_core_property_lpc54114))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = mcmgr_get_core_property_lpc54114
</UL>
<BR>[Address Reference Count : 1]<UL><LI> mcmgr_internal_core_api_lpc54114.o(.constdata)
</UL>
<P><STRONG><a name="[67]"></a>mcmgr_get_current_core_lpc54114</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, mcmgr_internal_core_api_lpc54114.o(i.mcmgr_get_current_core_lpc54114))
<BR>[Address Reference Count : 1]<UL><LI> mcmgr_internal_core_api_lpc54114.o(.constdata)
</UL>
<P><STRONG><a name="[63]"></a>mcmgr_get_startup_data_lpc54114</STRONG> (Thumb, 98 bytes, Stack size 24 bytes, mcmgr_internal_core_api_lpc54114.o(i.mcmgr_get_startup_data_lpc54114))
<BR><BR>[Stack]<UL><LI>Max Depth = 328<LI>Call Chain = mcmgr_get_startup_data_lpc54114 &rArr; __aeabi_assert &rArr; DbgConsole_Printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintInt &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write
</UL>
<BR>[Calls]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Address Reference Count : 1]<UL><LI> mcmgr_internal_core_api_lpc54114.o(.constdata)
</UL>
<P><STRONG><a name="[60]"></a>mcmgr_init_lpc54114</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, mcmgr_internal_core_api_lpc54114.o(i.mcmgr_init_lpc54114))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = mcmgr_init_lpc54114 &rArr; MAILBOX_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MAILBOX_Init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> mcmgr_internal_core_api_lpc54114.o(.constdata)
</UL>
<P><STRONG><a name="[61]"></a>mcmgr_load_app_lpc54114</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, mcmgr_internal_core_api_lpc54114.o(i.mcmgr_load_app_lpc54114))
<BR>[Address Reference Count : 1]<UL><LI> mcmgr_internal_core_api_lpc54114.o(.constdata)
</UL>
<P><STRONG><a name="[64]"></a>mcmgr_signal_ready_lpc54114</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, mcmgr_internal_core_api_lpc54114.o(i.mcmgr_signal_ready_lpc54114))
<BR>[Address Reference Count : 1]<UL><LI> mcmgr_internal_core_api_lpc54114.o(.constdata)
</UL>
<P><STRONG><a name="[62]"></a>mcmgr_start_core_lpc54114</STRONG> (Thumb, 148 bytes, Stack size 40 bytes, mcmgr_internal_core_api_lpc54114.o(i.mcmgr_start_core_lpc54114))
<BR><BR>[Stack]<UL><LI>Max Depth = 344<LI>Call Chain = mcmgr_start_core_lpc54114 &rArr; __aeabi_assert &rArr; DbgConsole_Printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintInt &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write
</UL>
<BR>[Calls]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Address Reference Count : 1]<UL><LI> mcmgr_internal_core_api_lpc54114.o(.constdata)
</UL>
<P><STRONG><a name="[65]"></a>mcmgr_stop_core_lpc54114</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, mcmgr_internal_core_api_lpc54114.o(i.mcmgr_stop_core_lpc54114))
<BR>[Address Reference Count : 1]<UL><LI> mcmgr_internal_core_api_lpc54114.o(.constdata)
</UL>
<P><STRONG><a name="[97]"></a>POWER_setVdLevel</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, fsl_power_lib.o(i.POWER_setVdLevel))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = POWER_setVdLevel
</UL>
<BR>[Called By]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;POWER_SetVoltageForFreq
</UL>
<P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
